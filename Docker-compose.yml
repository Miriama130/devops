version: '3.8'

services:
  # Application Spring Boot
  springapp:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8083:8083"
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/foyer?createDatabaseIfNotExist=true&useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: rootpassword
    networks:
      - foyer-network
    depends_on:
      mysql:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8083/Foyer/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Base de donn√©es MySQL
  mysql:
    image: mysql:8.0
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: foyer
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - foyer-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 5s
      timeout: 5s
      retries: 10

  # Jenkins CI/CD
  jenkins:
    image: jenkins/jenkins:lts-jdk17
    ports:
      - "8080:8080"
      - "50000:50000"
    volumes:
      - jenkins_data:/var/jenkins_home
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - foyer-network
    environment:
      JAVA_OPTS: "-Djenkins.install.runSetupWizard=false"

  # Nexus Repository
  nexus:
    image: sonatype/nexus3:3.47.1
    ports:
      - "8081:8081"
    volumes:
      - nexus_data:/nexus-data
    networks:
      - foyer-network
    environment:
      NEXUS_CONTEXT: /nexus

  # SonarQube
  sonarqube:
    image: sonarqube:community-9.9.1-enterprise
    ports:
      - "9000:9000"
    environment:
      SONAR_JDBC_URL: jdbc:postgresql://postgres:5432/sonar
      SONAR_JDBC_USERNAME: sonar
      SONAR_JDBC_PASSWORD: sonar
      SONAR_ES_BOOTSTRAP_CHECKS_DISABLE: "true"
    volumes:
      - sonarqube_data:/opt/sonarqube/data
      - sonarqube_extensions:/opt/sonarqube/extensions
    networks:
      - foyer-network
    depends_on:
      postgres:
        condition: service_healthy

  # PostgreSQL pour SonarQube
  postgres:
    image: postgres:13-alpine
    environment:
      POSTGRES_USER: sonar
      POSTGRES_PASSWORD: sonar
      POSTGRES_DB: sonar
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - foyer-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U sonar"]
      interval: 5s
      timeout: 5s
      retries: 10

volumes:
  mysql_data:
  jenkins_data:
  postgres_data:
  nexus_data:
  sonarqube_data:
  sonarqube_extensions:

networks:
  foyer-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
